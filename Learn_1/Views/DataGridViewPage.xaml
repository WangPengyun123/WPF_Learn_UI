<Page x:Class="Learn_1.Views.DataGridViewPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:local="clr-namespace:Learn_1.Views"
      xmlns:viewmodel="clr-namespace:Learn_1.Models"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="DataGridViewPage">
    <Page.DataContext>
        <viewmodel:DataGridViewPageModel/>
    </Page.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="2"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <ToolBarTray Grid.Row="0">
            <ToolBar Style="{DynamicResource MaterialDesignToolBar}" ClipToBounds="False">
                <Button ToolTip="Follow me on Twitter">
                    <materialDesign:PackIcon  Kind="TwitterBox" />
                </Button>
                <Button ToolTip="Save">
                    <materialDesign:PackIcon  Kind="ContentSave" />
                </Button>
                <Separator />
                <Button Command="Cut" ToolTip="Cut" ToolBar.OverflowMode="AsNeeded">
                    <materialDesign:PackIcon Kind="ContentCut" />
                </Button>
                <Button Command="Copy" ToolTip="Copy that stuff" ToolBar.OverflowMode="AsNeeded">                    
                    <materialDesign:PackIcon  Kind="ContentCopy" />
                </Button>
                <Separator />
                <Button  Command="Paste" ToolTip="Paste some stuff" ToolBar.OverflowMode="AsNeeded">
                    <materialDesign:PackIcon  Kind="ContentPaste" />
                </Button>
                <!-- when badging in a toolbar, make sure the parent ToolBar.ClipToBounds="False", and
                   manually apply the button style -->
                <materialDesign:Badged ToolBar.OverflowMode="AsNeeded" Badge="{materialDesign:PackIcon Alert}" CornerRadius="5">
                    <Button ToolTip="Badge it up!" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <materialDesign:PackIcon  Kind="AirplaneTakeoff" />                    
                    </Button>
                </materialDesign:Badged>
                <Separator />
                <ListBox>
                    <ListBoxItem ToolTip="This is a lonley toggle with TextBlock instead of icon">
                        <TextBlock>
                            W
                        </TextBlock>
                    </ListBoxItem>
                </ListBox>
                <Separator />
                <ListBox SelectedIndex="0">
                    <ListBox.ToolTip>
                        <StackPanel>
                            <TextBlock Text="MaterialDesignToolToggleFlatListBox" />
                            <TextBlock Text="Exclusive selection" />
                            <TextBlock Text="ListBoxAssist.IsToggle allows more natural toggle behaviour" />
                        </StackPanel>
                    </ListBox.ToolTip>
                    <ListBoxItem>
                        <materialDesign:PackIcon Kind="FormatAlignLeft" />
                    </ListBoxItem>
                    <ListBoxItem>
                        <materialDesign:PackIcon Kind="FormatAlignCenter" />
                    </ListBoxItem>
                    <ListBoxItem>
                        <materialDesign:PackIcon Kind="FormatAlignRight" />
                    </ListBoxItem>
                    <ListBoxItem>
                        <materialDesign:PackIcon Kind="FormatAlignJustify" />
                    </ListBoxItem>
                </ListBox>
                <Separator />
                <ListBox SelectionMode="Extended">
                    <ListBox.ToolTip>
                        <StackPanel>
                            <TextBlock Text="MaterialDesignToolToggleListBox" />
                            <TextBlock Text="Multiple selection" />
                            <TextBlock Text="ListBoxAssist.IsToggle allows more natural toggle behaviour" />
                        </StackPanel>
                    </ListBox.ToolTip>
                    <ListBoxItem>
                        <materialDesign:PackIcon Kind="FormatBold" />
                    </ListBoxItem>
                    <ListBoxItem>
                        <materialDesign:PackIcon   Kind="FormatItalic" />
                    </ListBoxItem>
                    <ListBoxItem  x:Name="UnderlineCheckbox">
                        <materialDesign:PackIcon   Kind="FormatUnderline" />
                    </ListBoxItem>
                </ListBox>
                <Separator />
                <Label Content="Font size:" VerticalAlignment="Center" />
                <ComboBox>
                    <ComboBoxItem  Content="10" />
                    <ComboBoxItem  IsSelected="True" Content="12" />
                    <ComboBoxItem  Content="14" />
                    <ComboBoxItem  Content="16" />
                </ComboBox>
                <CheckBox>
                    Check
                </CheckBox>
                <Button ToolTip="Take a nap" ToolBar.OverflowMode="Always">
                    <materialDesign:PackIcon Kind="Hotel" />
                </Button>
                <RadioButton GroupName="XXX" Content="Radio" />
                <RadioButton GroupName="XXX" Content="Ga Ga" />
                <Separator />
                <RadioButton GroupName="YYY" Style="{StaticResource MaterialDesignToolRadioButton}">
                    <materialDesign:PackIcon Kind="Radio" />
                </RadioButton>
                <RadioButton GroupName="YYY" Style="{StaticResource MaterialDesignToolRadioButton}">
                    <materialDesign:PackIcon Kind="EmoticonPoop" />
                </RadioButton>
                <Separator />
                <ToggleButton />
            </ToolBar>
        </ToolBarTray>
        <Border Grid.Row="1" BorderBrush="DarkSlateGray" BorderThickness="2"></Border>
        <DataGrid Grid.Row="2" Margin="0 0 0 0" ItemsSource="{Binding MusicList}" CanUserAddRows="False"  AutoGenerateColumns="False"  materialDesign:DataGridAssist.CellPadding="13 8 8 8"  materialDesign:DataGridAssist.ColumnHeaderPadding="8">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Width="*"   Binding="{Binding IsSelected}" ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}" EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                    <DataGridCheckBoxColumn.Header>
                        <!--padding to allow hit test to pass thru for sorting -->
                        <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                            <CheckBox HorizontalAlignment="Center"  DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}" IsChecked="{Binding IsAllItems3Selected}" />
                        </Border>
                    </DataGridCheckBoxColumn.Header>
                    
                </DataGridCheckBoxColumn>
                <DataGridTextColumn Binding="{Binding Code}" Header="编码" Width="*" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"/>
                <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                <materialDesign:DataGridTextColumn Binding="{Binding Name}" Width="*" Header="姓名" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <!-- set a max length to get an indicator in the editor -->
                <materialDesign:DataGridTextColumn Binding="{Binding Description}" Width="*" Header="描述" MaxLength="255" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Page>
